{
    "name": "VerisignApp",
    "structs": {
        "Attestation": [
            {
                "name": "creator_address",
                "type": "address"
            },
            {
                "name": "timestamp",
                "type": "uint64"
            }
        ]
    },
    "methods": [
        {
            "name": "attest",
            "args": [
                {
                    "type": "byte[]",
                    "name": "file_hash",
                    "desc": "A 32-byte SHA-256 hash of the content being signed"
                }
            ],
            "returns": {
                "type": "(address,uint64)",
                "struct": "Attestation",
                "desc": "The newly created attestation containing creator address and timestamp"
            },
            "actions": {
                "create": [],
                "call": [
                    "NoOp"
                ]
            },
            "readonly": false,
            "desc": "Create an immutable, timestamped signature for a piece of content.\nThis method allows a creator to register a file hash on-chain, proving they were the first to sign this specific content at a specific time.",
            "events": [],
            "recommendations": {}
        }
    ],
    "arcs": [
        22,
        28
    ],
    "desc": "\n    Veri-Sign Smart Contract\n    \n    This contract provides a decentralized content authentication system.\n    Creators can create immutable, timestamped signatures for their digital content\n    by storing a hash of the content on-chain, linked to their wallet address.\n    ",
    "networks": {},
    "state": {
        "schema": {
            "global": {
                "ints": 0,
                "bytes": 0
            },
            "local": {
                "ints": 0,
                "bytes": 0
            }
        },
        "keys": {
            "global": {},
            "local": {},
            "box": {}
        },
        "maps": {
            "global": {},
            "local": {},
            "box": {
                "attestations": {
                    "keyType": "AVMBytes",
                    "valueType": "Attestation",
                    "prefix": "YQ=="
                }
            }
        }
    },
    "bareActions": {
        "create": [
            "NoOp"
        ],
        "call": []
    },
    "sourceInfo": {
        "approval": {
            "sourceInfo": [
                {
                    "pc": [
                        66
                    ],
                    "errorMessage": "Content already attested"
                },
                {
                    "pc": [
                        37
                    ],
                    "errorMessage": "OnCompletion must be NoOp && can only call when creating"
                },
                {
                    "pc": [
                        26
                    ],
                    "errorMessage": "OnCompletion must be NoOp && can only call when not creating"
                },
                {
                    "pc": [
                        52
                    ],
                    "errorMessage": "invalid number of bytes for (len+uint8[])"
                }
            ],
            "pcOffsetMethod": "none"
        },
        "clear": {
            "sourceInfo": [],
            "pcOffsetMethod": "none"
        }
    },
    "source": {
        "approval": "I3ByYWdtYSB2ZXJzaW9uIDExCiNwcmFnbWEgdHlwZXRyYWNrIGZhbHNlCgovLyBhbGdvcHkuYXJjNC5BUkM0Q29udHJhY3QuYXBwcm92YWxfcHJvZ3JhbSgpIC0+IHVpbnQ2NDoKbWFpbjoKICAgIC8vIHNtYXJ0X2NvbnRyYWN0cy92ZXJpc2lnbi9jb250cmFjdC5weToxOAogICAgLy8gY2xhc3MgVmVyaXNpZ25BcHAoQVJDNENvbnRyYWN0KToKICAgIHR4biBOdW1BcHBBcmdzCiAgICBieiBtYWluX19fYWxnb3B5X2RlZmF1bHRfY3JlYXRlQDcKICAgIHB1c2hieXRlcyAweDkxM2MzZjQxIC8vIG1ldGhvZCAiYXR0ZXN0KGJ5dGVbXSkoYWRkcmVzcyx1aW50NjQpIgogICAgdHhuYSBBcHBsaWNhdGlvbkFyZ3MgMAogICAgbWF0Y2ggbWFpbl9hdHRlc3Rfcm91dGVANQogICAgZXJyCgptYWluX2F0dGVzdF9yb3V0ZUA1OgogICAgLy8gc21hcnRfY29udHJhY3RzL3ZlcmlzaWduL2NvbnRyYWN0LnB5OjM0CiAgICAvLyBAYWJpbWV0aG9kKCkKICAgIHR4biBPbkNvbXBsZXRpb24KICAgICEKICAgIHR4biBBcHBsaWNhdGlvbklECiAgICAmJgogICAgYXNzZXJ0IC8vIE9uQ29tcGxldGlvbiBtdXN0IGJlIE5vT3AgJiYgY2FuIG9ubHkgY2FsbCB3aGVuIG5vdCBjcmVhdGluZwogICAgYiBhdHRlc3QKCm1haW5fX19hbGdvcHlfZGVmYXVsdF9jcmVhdGVANzoKICAgIHR4biBPbkNvbXBsZXRpb24KICAgICEKICAgIHR4biBBcHBsaWNhdGlvbklECiAgICAhCiAgICAmJgogICAgcmV0dXJuIC8vIG9uIGVycm9yOiBPbkNvbXBsZXRpb24gbXVzdCBiZSBOb09wICYmIGNhbiBvbmx5IGNhbGwgd2hlbiBjcmVhdGluZwoKCi8vIHNtYXJ0X2NvbnRyYWN0cy52ZXJpc2lnbi5jb250cmFjdC5WZXJpc2lnbkFwcC5hdHRlc3Rbcm91dGluZ10oKSAtPiB2b2lkOgphdHRlc3Q6CiAgICAvLyBzbWFydF9jb250cmFjdHMvdmVyaXNpZ24vY29udHJhY3QucHk6MzQKICAgIC8vIEBhYmltZXRob2QoKQogICAgdHhuYSBBcHBsaWNhdGlvbkFyZ3MgMQogICAgZHVwCiAgICBwdXNoaW50IDAgLy8gMAogICAgZXh0cmFjdF91aW50MTYKICAgIHB1c2hpbnQgMiAvLyAyCiAgICArCiAgICBkaWcgMQogICAgbGVuCiAgICA9PQogICAgYXNzZXJ0IC8vIGludmFsaWQgbnVtYmVyIG9mIGJ5dGVzIGZvciAobGVuK3VpbnQ4W10pCiAgICBleHRyYWN0IDIgMAogICAgLy8gc21hcnRfY29udHJhY3RzL3ZlcmlzaWduL2NvbnRyYWN0LnB5OjUxLTUzCiAgICAvLyAjIEFzc2VydDogRW5zdXJlIHRoaXMgZmlsZSBoYXNoIGhhc24ndCBiZWVuIHNpZ25lZCBiZWZvcmUKICAgIC8vICMgVGhpcyBpbXBsZW1lbnRzIGEgImZpcnN0IHRvIHNpZ24gd2lucyIgcG9saWN5CiAgICAvLyBhc3NlcnQgZmlsZV9oYXNoIG5vdCBpbiBzZWxmLmF0dGVzdGF0aW9ucywgIkNvbnRlbnQgYWxyZWFkeSBhdHRlc3RlZCIKICAgIHB1c2hieXRlcyAweDYxCiAgICBzd2FwCiAgICBjb25jYXQKICAgIGR1cAogICAgYm94X2xlbgogICAgYnVyeSAxCiAgICAhCiAgICBhc3NlcnQgLy8gQ29udGVudCBhbHJlYWR5IGF0dGVzdGVkCiAgICAvLyBzbWFydF9jb250cmFjdHMvdmVyaXNpZ24vY29udHJhY3QucHk6NTcKICAgIC8vIGNyZWF0b3JfYWRkcmVzcz1BZGRyZXNzKFR4bi5zZW5kZXIpLCAgIyBUaGUgd2FsbGV0IGFkZHJlc3MgY2FsbGluZyB0aGlzIG1ldGhvZAogICAgdHhuIFNlbmRlcgogICAgLy8gc21hcnRfY29udHJhY3RzL3ZlcmlzaWduL2NvbnRyYWN0LnB5OjU4CiAgICAvLyB0aW1lc3RhbXA9VUludDY0KEdsb2JhbC5sYXRlc3RfdGltZXN0YW1wKSAgIyBDdXJyZW50IGJsb2NrIHRpbWVzdGFtcAogICAgZ2xvYmFsIExhdGVzdFRpbWVzdGFtcAogICAgaXRvYgogICAgLy8gc21hcnRfY29udHJhY3RzL3ZlcmlzaWduL2NvbnRyYWN0LnB5OjU1LTU5CiAgICAvLyAjIENyZWF0ZTogSW5zdGFudGlhdGUgYSBuZXcgQXR0ZXN0YXRpb24gc3RydWN0CiAgICAvLyBuZXdfYXR0ZXN0YXRpb24gPSBBdHRlc3RhdGlvbigKICAgIC8vICAgICBjcmVhdG9yX2FkZHJlc3M9QWRkcmVzcyhUeG4uc2VuZGVyKSwgICMgVGhlIHdhbGxldCBhZGRyZXNzIGNhbGxpbmcgdGhpcyBtZXRob2QKICAgIC8vICAgICB0aW1lc3RhbXA9VUludDY0KEdsb2JhbC5sYXRlc3RfdGltZXN0YW1wKSAgIyBDdXJyZW50IGJsb2NrIHRpbWVzdGFtcAogICAgLy8gKQogICAgY29uY2F0CiAgICAvLyBzbWFydF9jb250cmFjdHMvdmVyaXNpZ24vY29udHJhY3QucHk6NjEtNjIKICAgIC8vICMgU3RvcmU6IFNhdmUgdGhlIGF0dGVzdGF0aW9uIHRvIHRoZSBCb3hNYXAgdXNpbmcgZmlsZV9oYXNoIGFzIGtleQogICAgLy8gc2VsZi5hdHRlc3RhdGlvbnNbZmlsZV9oYXNoXSA9IG5ld19hdHRlc3RhdGlvbi5jb3B5KCkKICAgIHN3YXAKICAgIGRpZyAxCiAgICBib3hfcHV0CiAgICAvLyBzbWFydF9jb250cmFjdHMvdmVyaXNpZ24vY29udHJhY3QucHk6MzQKICAgIC8vIEBhYmltZXRob2QoKQogICAgcHVzaGJ5dGVzIDB4MTUxZjdjNzUKICAgIHN3YXAKICAgIGNvbmNhdAogICAgbG9nCiAgICBwdXNoaW50IDEgLy8gMQogICAgcmV0dXJuCg==",
        "clear": "I3ByYWdtYSB2ZXJzaW9uIDExCiNwcmFnbWEgdHlwZXRyYWNrIGZhbHNlCgovLyBhbGdvcHkuYXJjNC5BUkM0Q29udHJhY3QuY2xlYXJfc3RhdGVfcHJvZ3JhbSgpIC0+IHVpbnQ2NDoKbWFpbjoKICAgIHB1c2hpbnQgMSAvLyAxCiAgICByZXR1cm4K"
    },
    "byteCode": {
        "approval": "CzEbQQAYgASRPD9BNhoAjgEAAQAxGRQxGBBEQgAIMRkUMRgUEEM2GgFJgQBZgQIISwEVEkRXAgCAAWFMUEm9RQEURDEAMgcWUExLAb+ABBUffHVMULCBAUM=",
        "clear": "C4EBQw=="
    },
    "compilerInfo": {
        "compiler": "puya",
        "compilerVersion": {
            "major": 5,
            "minor": 2,
            "patch": 0
        }
    },
    "events": [],
    "templateVariables": {}
}